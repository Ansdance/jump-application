package kz.jumpkz.jumpapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StatisticAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStatisticAllPropertiesEquals(Statistic expected, Statistic actual) {
        assertStatisticAutoGeneratedPropertiesEquals(expected, actual);
        assertStatisticAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStatisticAllUpdatablePropertiesEquals(Statistic expected, Statistic actual) {
        assertStatisticUpdatableFieldsEquals(expected, actual);
        assertStatisticUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStatisticAutoGeneratedPropertiesEquals(Statistic expected, Statistic actual) {
        assertThat(expected)
            .as("Verify Statistic auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStatisticUpdatableFieldsEquals(Statistic expected, Statistic actual) {
        assertThat(expected)
            .as("Verify Statistic relevant properties")
            .satisfies(e -> assertThat(e.getStatisticTitle()).as("check statisticTitle").isEqualTo(actual.getStatisticTitle()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStatisticUpdatableRelationshipsEquals(Statistic expected, Statistic actual) {
        assertThat(expected)
            .as("Verify Statistic relationships")
            .satisfies(e -> assertThat(e.getTasks()).as("check tasks").isEqualTo(actual.getTasks()))
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()));
    }
}
